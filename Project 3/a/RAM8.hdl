// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=w1, 
    b=w2, c=w3, d=w4, e=w5, f=w6, g=w7, h=w8);
    Register(in=in, load=w1, out=w1Out);
    Register(in=in, load=w2, out=w2Out);
    Register(in=in, load=w3, out=w3Out);
    Register(in=in, load=w4, out=w4Out);
    Register(in=in, load=w5, out=w5Out);
    Register(in=in, load=w6, out=w6Out);
    Register(in=in, load=w7, out=w7Out);
    Register(in=in, load=w8, out=w8Out);
    Mux8Way16(a=w1Out, b=w2Out, c=w3Out, 
    d=w4Out, e=w5Out, f=w6Out, g=w7Out, h=w8Out, sel=address, out=out);
}